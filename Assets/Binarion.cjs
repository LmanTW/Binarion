"use strict";var __create=Object.create,__defProp=Object.defineProperty,__getOwnPropDesc=Object.getOwnPropertyDescriptor,__getOwnPropNames=Object.getOwnPropertyNames,__getProtoOf=Object.getPrototypeOf,__hasOwnProp=Object.prototype.hasOwnProperty,__export=(e,t)=>{for(var r in t)__defProp(e,r,{get:t[r],enumerable:!0})},__copyProps=(e,t,r,a)=>{if(t&&"object"==typeof t||"function"==typeof t)for(let n of __getOwnPropNames(t))__hasOwnProp.call(e,n)||n===r||__defProp(e,n,{get:()=>t[n],enumerable:!(a=__getOwnPropDesc(t,n))||a.enumerable});return e},__toESM=(e,t,r)=>(r=null!=e?__create(__getProtoOf(e)):{},__copyProps(!t&&e&&e.__esModule?r:__defProp(r,"default",{value:e,enumerable:!0}),e)),__toCommonJS=e=>__copyProps(__defProp({},"__esModule",{value:!0}),e),API_exports={};__export(API_exports,{Binarion:()=>Binarion,Inspector:()=>Inspector_default}),module.exports=__toCommonJS(API_exports);var DataFormat,CacheManager_default=class{_groups={};hasGroup(e){return void 0!==this._groups[e]}createGroup(e){if(void 0!==this._groups[e])throw new Error(`Cache Group Already Exists: "${e}"`);this._groups[e]=new Map}getCache(e,t){if(void 0===this._groups[e])throw new Error(`Cache Group Not Found: "${e}"`);return this._groups[e].get(t)}setCache(e,t,r){if(void 0===this._groups[e])throw new Error(`Cache Group Not Found: "${e}"`);this._groups[e].set(t,r)}clear(){Object.keys(this._groups).forEach((e=>this._groups[e].clear()))}},DefaultValue_default=(e,t)=>void 0===e?t:e,Nibble_default=class{static writeNibble(e,t,r){e.writeByte(t<<4|r)}static readNibble(e){const t=e.readByte();return[t>>4&15,15&t]}},import_util=__toESM(require("util"));(e=>{let t;var r;(r=t=e.ID||(e.ID={}))[r.None=0]="None",r[r.Boolean=1]="Boolean",r[r.Integer=2]="Integer",r[r.Float=3]="Float",r[r.String=4]="String",r[r.Array=5]="Array",r[r.UintArray=7]="UintArray",r[r.Object=11]="Object",r[r.Map=12]="Map",r[r.Set=13]="Set",r[r.Function=14]="Function"})(DataFormat||(DataFormat={}));var DataFormat_default=DataFormat,Integer=class{static getMaxIntegerValue(e){if(0===e)return 0;let t=0;for(let r=0;r<7*e;r++)t+=0===t?2:t;return t}static getIntegerByteLength(e){const t=e<0?-e:e;for(let e=0;e<integerByteLengths.length;e++)if(t<integerByteLengths[e])return e;throw new Error(`Integer Out Of Range: ${e}`)}static getIntegerBody(e,t,r){e.hasGroup("integerBody")||e.createGroup("integerBody");let a=e.getCache("integerBody",t);if(void 0===a){a=new Uint8Array(r);for(let e=0;e<r;e++){let n=t>>7*e&127;e===r-1&&(n|=128),a[e]=n}e.setCache("integerBody",t,a)}return a}static writeInteger(e,t,r){e.Cache.hasGroup("integerBody")||e.Cache.createGroup("integerBody");let a=e.Cache.getCache("integerBody",t);void 0===a&&(a=this.getIntegerBody(e.Cache,t,r),e.Cache.setCache("integerBody",t,a)),e.writeBytes(a)}static readInteger(e){let t=0,r=0;for(;e.index<e.bytes.length;){const a=e.readByte();if(a>>7==1){t|=(127&a)<<r;break}t|=a<<r,r+=7}return Number(t)}},integerByteLengths=[];for(let e=0;e<4;e++)integerByteLengths.push(Integer.getMaxIntegerValue(e));console.log(getMaxIntegerValue(4));var Data,Integer_default=Integer,DataFormat_UintArray={id:DataFormat_default.ID.UintArray,getHeaderAttachemnt:e=>e instanceof Uint16Array?2:e instanceof Uint32Array?4:1,getBodyInfo:(e,t)=>{const r=Integer_default.getIntegerByteLength(t.length);let a=1;return t instanceof Uint16Array&&(a=2),t instanceof Uint32Array&&(a=4),{bodyLength:r+t.length*a,integerByteLength:r,elementByteLength:a}},writeBody:(e,t,r)=>{if(Integer_default.writeInteger(e,t.length,r.integerByteLength),t instanceof Uint8Array)e.writeBytes(t);else for(let a=0;a<t.length;a++)for(let n=8*(r.elementByteLength-1);n>=0;n-=8)e.writeByte(t[a]>>n&255)},readBody:(e,t)=>{const r=Integer_default.readInteger(e);if(1===t)return e.readBytes(r);{let a;if(t<=2)a=new Uint16Array(r);else{if(!(t<=4))throw new Error(`Element Byte Length Out Of Range: ${t}`);a=new Uint32Array(r)}for(let n=0;n<r;n++)for(let r=8*(t-1);r>=0;r-=8)a[n]|=e.readByte()<<r;return a}},inspectName:e=>1===e?"UintArray(8)":e<=2?"UintArray(16)":"UintArray(32)",inspectChildren:(e,t)=>{const r=Integer_default.readInteger(e);if(1===t)e.readBytes(r);else{let a;if(t<=2)a=new Uint16Array(r);else{if(!(t<=4))throw new Error(`Element Byte Length Out Of Range: ${t}`);a=new Uint32Array(r)}for(let a=0;a<r;a++)for(let r=8*(t-1);r>=0;r-=8)e.readByte()}return[]}},UintArray_default=DataFormat_UintArray,DataFormat_Boolean={id:DataFormat_default.ID.Boolean,getHeaderAttachemnt:e=>e?1:0,getBodyInfo:()=>({bodyLength:0}),writeBody:()=>{},readBody:(e,t)=>1===t,inspectName:()=>"Boolean",inspectChildren:()=>[]},Boolean_default=DataFormat_Boolean,DataFormat_Integer={id:DataFormat_default.ID.Integer,getHeaderAttachemnt:e=>e<0?1:0,getBodyInfo:(e,t)=>({bodyLength:Integer_default.getIntegerByteLength(t)}),writeBody:(e,t,r)=>Integer_default.writeInteger(e,t<0?-t:t,r.bodyLength),readBody:(e,t)=>{const r=Integer_default.readInteger(e);return 1===t?-r:r},inspectName:()=>"Integer",inspectChildren:e=>(Integer_default.readInteger(e),[])},Integer_default2=DataFormat_Integer,String_default=class{static getStringByteLength(e,t){e.hasGroup("stringByteLength")||e.createGroup("stringByteLength");let r=e.getCache("stringByteLength",t);if(void 0===r){r=0;for(let e=0;e<t.length;e++)r+=Integer_default.getIntegerByteLength(t.charCodeAt(e));e.setCache("stringByteLength",t,r)}return Integer_default.getIntegerByteLength(t.length)+r}static writeString(e,t){e.Cache.hasGroup("stringBody")||e.Cache.createGroup("stringBody");let r=e.Cache.getCache("stringBody",t);if(void 0===r){r=new Uint8Array(this.getStringByteLength(e.Cache,t));const a=Integer_default.getIntegerByteLength(t.length);r.set(Integer_default.getIntegerBody(e.Cache,t.length,a),0);let n=a;for(let a=0;a<t.length;a++){const o=t.charCodeAt(a),g=Integer_default.getIntegerBody(e.Cache,o,Integer_default.getIntegerByteLength(o));r.set(g,n),n+=g.length}}e.writeBytes(r)}static readString(e){let t="";const r=Integer_default.readInteger(e);for(let a=0;a<r;a++)t+=String.fromCharCode(Number(Integer_default.readInteger(e)));return t}},DataFormat_String={id:DataFormat_default.ID.String,getHeaderAttachemnt:()=>0,getBodyInfo:(e,t)=>({bodyLength:String_default.getStringByteLength(e,t)}),writeBody:(e,t)=>String_default.writeString(e,t),readBody:e=>String_default.readString(e),inspectName:()=>"String",inspectChildren:()=>[]},String_default2=DataFormat_String,DataFormat_Object={id:DataFormat_default.ID.Object,getHeaderAttachemnt:()=>0,getBodyInfo:(e,t)=>{let r=0;const a=Object.keys(t);for(const n of a)r+=String_default.getStringByteLength(e,n),r+=Fragment_default.getFragmentByteLength(e,t[n]);return{bodyLength:Integer_default.getIntegerByteLength(a.length)+r}},writeBody:(e,t)=>{const r=Object.keys(t);Integer_default.writeInteger(e,r.length,Integer_default.getIntegerByteLength(r.length));for(const a of r)String_default.writeString(e,a),Fragment_default.writeFragment(e,t[a])},readBody:e=>{const t={},r=Integer_default.readInteger(e);for(let a=0;a<r;a++)t[String_default.readString(e)]=Fragment_default.readFragment(e);return t},inspectName:()=>"Object",inspectChildren:(e,t,r,a)=>{const n=[],o=Integer_default.readInteger(e);for(let t=0;t<o;t++)String_default.readString(e),n.push(Fragment_default.inspectFragment(e,r,a+1));return a<r.depth?n:[]}},Object_default=DataFormat_Object,DataFormat_Array={id:DataFormat_default.ID.Array,getHeaderAttachemnt:()=>0,getBodyInfo:(e,t)=>{let r=0;for(const a of t)r+=Fragment_default.getFragmentByteLength(e,a);const a=Integer_default.getIntegerByteLength(t.length);return{bodyLength:a+r,integerByteLength:a}},writeBody:(e,t,r)=>{Integer_default.writeInteger(e,t.length,r.integerByteLength);for(const r of t)Fragment_default.writeFragment(e,r)},readBody:e=>{const t=[],r=Integer_default.readInteger(e);for(let a=0;a<r;a++)t.push(Fragment_default.readFragment(e));return t},inspectName:()=>"Array",inspectChildren:(e,t,r,a)=>{const n=[],o=Integer_default.readInteger(e);for(let t=0;t<o;t++)n.push(Fragment_default.inspectFragment(e,r,a+1));return a<r.depth?n:[]}},Array_default=DataFormat_Array,DataFormat_None={id:DataFormat_default.ID.None,getHeaderAttachemnt:e=>null===e?0:1,getBodyInfo:()=>({bodyLength:0}),writeBody:()=>{},readBody:(e,t)=>{if(0===t)return null},inspectName:e=>0===e?"None (Null)":"None (Undefined)",inspectChildren:()=>[]},None_default=DataFormat_None,DataFormat_Set={id:DataFormat_default.ID.Set,getHeaderAttachemnt:()=>0,getBodyInfo:(e,t)=>{let r=0;const a=t.keys();for(;;){const e=a.next();if(r+=Fragment_default.getFragmentByteLength(e.value),e.done)break}return{bodyLength:Integer_default.getIntegerByteLength(t.size)+r}},writeBody:(e,t)=>{Integer_default.writeInteger(e,t.size,Integer_default.getIntegerByteLength(t.size));const r=t.keys();for(;;){const t=r.next();if(Fragment_default.writeFragment(e,t.value),t.done)break}},readBody:e=>{const t=new Set,r=Integer_default.readInteger(e);for(let a=0;a<r;a++)t.add(Fragment_default.readFragment(e));return t},inspectName:()=>"Set",inspectChildren:(e,t,r,a)=>{const n=[],o=Integer_default.readInteger(e);for(let t=0;t<o;t++)n.push(Fragment_default.inspectFragment(e,r,a+1));return a<r.depth?n:[]}},Set_default=DataFormat_Set,DataFormat_Map={id:DataFormat_default.ID.Map,getHeaderAttachemnt:()=>0,getBodyInfo:(e,t)=>{let r=0;const a=t.keys();for(;;){const n=a.next();if(void 0!==n.value&&(r+=String_default.getStringByteLength(e,n.value),r+=Fragment_default.getFragmentByteLength(t.get(n.value))),n.done)break}return{bodyLength:Integer_default.getIntegerByteLength(t.size)+r}},writeBody:(e,t)=>{Integer_default.writeInteger(e,t.size,Integer_default.getIntegerByteLength(t.size));const r=t.keys();for(;;){const a=r.next();if(void 0!==a.value&&(String_default.writeString(e,a.value),Fragment_default.writeFragment(e,t.get(a.value))),a.done)break}},readBody(e){const t=new Map,r=Integer_default.readInteger(e);for(let a=0;a<r;a++)t.set(String_default.readString(e),Fragment_default.readFragment(e));return t},inspectName:()=>"Map",inspectChildren:(e,t,r,a)=>{const n=[],o=Integer_default.readInteger(e);for(let t=0;t<o;t++)n.push(Fragment_default.inspectFragment(e,r,a+1));return a<r.depth?n:[]}},Map_default=DataFormat_Map;(e=>{e.Writer=class{_index=0;_bytes;Cache;constructor(e,t){this._bytes=t,this.Cache=e}get index(){return this._index}get bytes(){return this._bytes}writeByte(e){this._bytes[this._index]=e,this._index++}writeBytes(e){this._bytes.set(e,this._index),this._index+=e.length}};e.Reader=class{_index=0;_bytes;constructor(e){this._bytes=e,this._bytes.set}get index(){return this._index}get bytes(){return this._bytes}readByte(){const e=this._bytes[this._index];return this._index++,e}readBytes(e){const t=this._bytes.subarray(this._index,this._index+e);return this._index+=e,t}},e.Formats=[UintArray_default,Boolean_default,Integer_default2,String_default2,Object_default,Array_default,None_default,Set_default,Map_default],e.getDataFormatID=function(e){if(null==e)return DataFormat_default.ID.None;if("boolean"==typeof e)return DataFormat_default.ID.Boolean;if("number"==typeof e&&!Number.isNaN(e))return Number.isInteger(e)?DataFormat_default.ID.Integer:DataFormat_default.ID.Float;if("string"==typeof e)return DataFormat_default.ID.String;if(Array.isArray(e))return DataFormat_default.ID.Array;if(e instanceof Uint8Array||e instanceof Uint16Array||e instanceof Uint32Array||e instanceof BigUint64Array)return DataFormat_default.ID.UintArray;if(e instanceof Set)return DataFormat_default.ID.Set;if(e instanceof Map)return DataFormat_default.ID.Map;if(e instanceof Object)return DataFormat_default.ID.Object;throw new Error(`Unsupported Data Format: <${typeof e}> ([34m${import_util.default.inspect(e)}[0m)`)},e.getDataFormat=function(t){for(const r of e.Formats)if(r.id===t)return r;throw new Error(`Data Format Not Found: "${t}"`)}})(Data||(Data={}));var Binarion,Data_default=Data,Fragment_default=class{static getFragmentByteLength(e,t){const r=Data_default.getDataFormatID(t);return 1+Data_default.getDataFormat(r).getBodyInfo(e,t).bodyLength}static writeFragment(e,t){const r=Data_default.getDataFormatID(t),a=Data_default.getDataFormat(r),n=a.getBodyInfo(e.Cache,t);this.writeHeader(e,{dataFormatID:r,attachment:a.getHeaderAttachemnt(t)}),a.writeBody(e,t,n)}static writeHeader(e,t){Nibble_default.writeNibble(e,t.dataFormatID,t.attachment)}static readFragment(e){const[t,r]=Nibble_default.readNibble(e);return Data_default.getDataFormat(t).readBody(e,r)}static inspectFragment(e,t,r){const a=e.index,[n,o]=Nibble_default.readNibble(e),g=Data_default.getDataFormat(n),i=Data_default.getDataFormat(n).inspectChildren(e,o,t,r);return{dataFormatID:n,headerAttachment:o,name:g.inspectName(o),fragmentByteLength:e.index-a,index:a,children:i}}},Inspector_default=class{_options;_inspectResult;constructor(e,t){void 0===t&&(t={}),this._options={depth:DefaultValue_default(t.depth,1/0)},this._inspectResult=Fragment_default.inspectFragment(new Data_default.Reader(e),this._options,0)}get fragmentInfo(){return this._inspectResult}format(){return this._formatFragmentInfo(this._inspectResult,0)}_formatFragmentInfo(e,t){let r="";r+="  ".repeat(t)+`- ${e.name} [${e.fragmentByteLength} Bytes]`;for(const a of e.children)r+=`\n${this._formatFragmentInfo(a,t+1)}`;return r}};(e=>{e.save=function(e){const t=new CacheManager_default,r=new Uint8Array(Fragment_default.getFragmentByteLength(t,e)),a=new Data_default.Writer(t,r);return Fragment_default.writeFragment(a,e),a.Cache.clear(),r},e.load=function(e){return Fragment_default.readFragment(new Data_default.Reader(e))}})(Binarion||(Binarion={}));