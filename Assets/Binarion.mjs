var DataFormat,CacheManager_default=class{_groups={};constructor(){}hasGroup(t){return void 0!==this._groups[t]}createGroup(t){if(void 0!==this._groups[t])throw new Error(`Cache Group Already Exists: "${t}"`);this._groups[t]=new Map}getCache(t,e){if(void 0===this._groups[t])throw new Error(`Cache Group Not Found: "${t}"`);return this._groups[t].get(e)}setCache(t,e,r){if(void 0===this._groups[t])throw new Error(`Cache Group Not Found: "${t}"`);this._groups[t].set(e,r)}},DefaultValue_default=(t,e)=>void 0===t?e:t,Nibble_default=class{static writeNibble(t,e,r){t.writeByte(e<<4|r)}static readNibble(t){const e=t.readByte();return[e>>4&15,15&e]}};import util from"util";(t=>{let e;var r;(r=e=t.ID||(t.ID={}))[r.None=0]="None",r[r.Boolean=1]="Boolean",r[r.Integer=2]="Integer",r[r.Float=3]="Float",r[r.String=4]="String",r[r.Array=5]="Array",r[r.UintArray=7]="UintArray",r[r.Object=11]="Object",r[r.Map=12]="Map",r[r.Set=13]="Set",r[r.Function=14]="Function"})(DataFormat||(DataFormat={}));var DataFormat_default=DataFormat,Integer=class{static getMaxIntegerValue(t){if(0===t)return 0;let e=0;for(let r=0;r<7*t;r++)e+=0===e?2:e;return e}static getIntegerByteLength(t){const e=t<0?-t:t;for(let t=0;t<integerByteLengths.length;t++)if(e<integerByteLengths[t])return t;throw new Error(`Integer Out Of Range: ${t}`)}static getIntegerBody(t,e,r){t.hasGroup("integerBody")||t.createGroup("integerBody");let a=t.getCache("integerBody",e);if(void 0===a){a=new Uint8Array(r);for(let t=0;t<r;t++){let n=e>>7*t&127;t===r-1&&(n|=128),a[t]=n}t.setCache("integerBody",e,a)}return a}static writeInteger(t,e,r){t.Cache.hasGroup("integerBody")||t.Cache.createGroup("integerBody");let a=t.Cache.getCache("integerBody",e);void 0===a&&(a=this.getIntegerBody(t.Cache,e,r),t.Cache.setCache("integerBody",e,a)),t.writeBytes(a)}static readInteger(t){let e=0n,r=0;for(;t.index<t.bytes.length;){const a=t.readByte();if(a>>7==1){e|=(0b01111111n&BigInt(a))<<BigInt(r);break}e|=BigInt(a)<<BigInt(r),r+=7}return Number(e)}},integerByteLengths=[];for(let t=0;t<4;t++)integerByteLengths.push(Integer.getMaxIntegerValue(t));var Data,Integer_default=Integer,DataFormat_UintArray={id:DataFormat_default.ID.UintArray,getHeaderAttachemnt:t=>t instanceof Uint16Array?2:t instanceof Uint32Array?4:1,getBodyInfo:(t,e)=>{const r=Integer_default.getIntegerByteLength(e.length);let a=1;return e instanceof Uint16Array&&(a=2),e instanceof Uint32Array&&(a=4),{bodyLength:r+e.length*a,integerByteLength:r,elementByteLength:a}},writeBody:(t,e,r)=>{if(Integer_default.writeInteger(t,e.length,r.integerByteLength),e instanceof Uint8Array)t.writeBytes(e);else for(let a=0;a<e.length;a++)for(let n=8*(r.elementByteLength-1);n>=0;n-=8)t.writeByte(e[a]>>n&255)},readBody:(t,e)=>{const r=Integer_default.readInteger(t);if(1===e)return t.readBytes(r);{let a;if(e<=2)a=new Uint16Array(r);else{if(!(e<=4))throw new Error(`Element Byte Length Out Of Range: ${e}`);a=new Uint32Array(r)}for(let n=0;n<r;n++)for(let r=8*(e-1);r>=0;r-=8)a[n]|=t.readByte()<<r;return a}},inspectName:t=>1===t?"UintArray(8)":t<=2?"UintArray(16)":"UintArray(32)",inspectChildren:(t,e)=>{const r=Integer_default.readInteger(t);if(1===e)t.readBytes(r);else{let a;if(e<=2)a=new Uint16Array(r);else{if(!(e<=4))throw new Error(`Element Byte Length Out Of Range: ${e}`);a=new Uint32Array(r)}for(let a=0;a<r;a++)for(let r=8*(e-1);r>=0;r-=8)t.readByte()}return[]}},UintArray_default=DataFormat_UintArray,DataFormat_Boolean={id:DataFormat_default.ID.Boolean,getHeaderAttachemnt:t=>t?1:0,getBodyInfo:()=>({bodyLength:0}),writeBody:()=>{},readBody:(t,e)=>1===e,inspectName:()=>"Boolean",inspectChildren:()=>[]},Boolean_default=DataFormat_Boolean,DataFormat_Integer={id:DataFormat_default.ID.Integer,getHeaderAttachemnt:t=>t<0?1:0,getBodyInfo:(t,e)=>({bodyLength:Integer_default.getIntegerByteLength(e)}),writeBody:(t,e,r)=>Integer_default.writeInteger(t,e<0?-e:e,r.bodyLength),readBody:(t,e)=>{const r=Integer_default.readInteger(t);return 1===e?-r:r},inspectName:()=>"Integer",inspectChildren:t=>(Integer_default.readInteger(t),[])},Integer_default2=DataFormat_Integer,String_default=class{static getStringByteLength(t,e){t.hasGroup("stringByteLength")||t.createGroup("stringByteLength");let r=t.getCache("stringByteLength",e);if(void 0===r){r=0;for(let t=0;t<e.length;t++)r+=Integer_default.getIntegerByteLength(e.charCodeAt(t));t.setCache("stringByteLength",e,r)}return Integer_default.getIntegerByteLength(e.length)+r}static writeString(t,e){t.Cache.hasGroup("stringBody")||t.Cache.createGroup("stringBody");let r=t.Cache.getCache("stringBody",e);if(void 0===r){r=new Uint8Array(this.getStringByteLength(t.Cache,e));const a=Integer_default.getIntegerByteLength(e.length);r.set(Integer_default.getIntegerBody(t.Cache,e.length,a),0);let n=a;for(let a=0;a<e.length;a++){const g=e.charCodeAt(a),o=Integer_default.getIntegerBody(t.Cache,g,Integer_default.getIntegerByteLength(g));r.set(o,n),n+=o.length}}t.writeBytes(r)}static readString(t){let e="";const r=Integer_default.readInteger(t);for(let a=0;a<r;a++)e+=String.fromCharCode(Number(Integer_default.readInteger(t)));return e}},DataFormat_String={id:DataFormat_default.ID.String,getHeaderAttachemnt:()=>0,getBodyInfo:(t,e)=>({bodyLength:String_default.getStringByteLength(t,e)}),writeBody:(t,e)=>String_default.writeString(t,e),readBody:t=>String_default.readString(t),inspectName:()=>"String",inspectChildren:()=>[]},String_default2=DataFormat_String,DataFormat_Object={id:DataFormat_default.ID.Object,getHeaderAttachemnt:()=>0,getBodyInfo:(t,e)=>{let r=0;const a=Object.keys(e);for(const n of a)r+=String_default.getStringByteLength(t,n),r+=Fragment_default.getFragmentByteLength(t,e[n]);return{bodyLength:Integer_default.getIntegerByteLength(a.length)+r}},writeBody:(t,e)=>{const r=Object.keys(e);Integer_default.writeInteger(t,r.length,Integer_default.getIntegerByteLength(r.length));for(const a of r)String_default.writeString(t,a),Fragment_default.writeFragment(t,e[a])},readBody:t=>{const e={},r=Integer_default.readInteger(t);for(let a=0;a<r;a++)e[String_default.readString(t)]=Fragment_default.readFragment(t);return e},inspectName:()=>"Object",inspectChildren:(t,e,r,a)=>{const n=[],g=Integer_default.readInteger(t);for(let e=0;e<g;e++)String_default.readString(t),n.push(Fragment_default.inspectFragment(t,r,a+1));return a<r.depth?n:[]}},Object_default=DataFormat_Object,DataFormat_Array={id:DataFormat_default.ID.Array,getHeaderAttachemnt:()=>0,getBodyInfo:(t,e)=>{let r=0;for(const a of e)r+=Fragment_default.getFragmentByteLength(t,a);const a=Integer_default.getIntegerByteLength(e.length);return{bodyLength:a+r,integerByteLength:a}},writeBody:(t,e,r)=>{Integer_default.writeInteger(t,e.length,r.integerByteLength);for(const r of e)Fragment_default.writeFragment(t,r)},readBody:t=>{const e=[],r=Integer_default.readInteger(t);for(let a=0;a<r;a++)e.push(Fragment_default.readFragment(t));return e},inspectName:()=>"Array",inspectChildren:(t,e,r,a)=>{const n=[],g=Integer_default.readInteger(t);for(let e=0;e<g;e++)n.push(Fragment_default.inspectFragment(t,r,a+1));return a<r.depth?n:[]}},Array_default=DataFormat_Array,DataFormat_None={id:DataFormat_default.ID.None,getHeaderAttachemnt:t=>null===t?0:1,getBodyInfo:()=>({bodyLength:0}),writeBody:()=>{},readBody:(t,e)=>{if(0===e)return null},inspectName:t=>0===t?"None (Null)":"None (Undefined)",inspectChildren:()=>[]},None_default=DataFormat_None,DataFormat_Set={id:DataFormat_default.ID.Set,getHeaderAttachemnt:()=>0,getBodyInfo:(t,e)=>{let r=0;const a=e.keys();for(;;){const t=a.next();if(r+=Fragment_default.getFragmentByteLength(t.value),t.done)break}return{bodyLength:Integer_default.getIntegerByteLength(e.size)+r}},writeBody:(t,e)=>{Integer_default.writeInteger(t,e.size,Integer_default.getIntegerByteLength(e.size));const r=e.keys();for(;;){const e=r.next();if(Fragment_default.writeFragment(t,e.value),e.done)break}},readBody:t=>{const e=new Set,r=Integer_default.readInteger(t);for(let a=0;a<r;a++)e.add(Fragment_default.readFragment(t));return e},inspectName:()=>"Set",inspectChildren:(t,e,r,a)=>{const n=[],g=Integer_default.readInteger(t);for(let e=0;e<g;e++)n.push(Fragment_default.inspectFragment(t,r,a+1));return a<r.depth?n:[]}},Set_default=DataFormat_Set,DataFormat_Map={id:DataFormat_default.ID.Map,getHeaderAttachemnt:()=>0,getBodyInfo:(t,e)=>{let r=0;const a=e.keys();for(;;){const n=a.next();if(void 0!==n.value&&(r+=String_default.getStringByteLength(t,n.value),r+=Fragment_default.getFragmentByteLength(e.get(n.value))),n.done)break}return{bodyLength:Integer_default.getIntegerByteLength(e.size)+r}},writeBody:(t,e)=>{Integer_default.writeInteger(t,e.size,Integer_default.getIntegerByteLength(e.size));const r=e.keys();for(;;){const a=r.next();if(void 0!==a.value&&(String_default.writeString(t,a.value),Fragment_default.writeFragment(t,e.get(a.value))),a.done)break}},readBody(t){const e=new Map,r=Integer_default.readInteger(t);for(let a=0;a<r;a++)e.set(String_default.readString(t),Fragment_default.readFragment(t));return e},inspectName:()=>"Map",inspectChildren:(t,e,r,a)=>{const n=[],g=Integer_default.readInteger(t);for(let e=0;e<g;e++)n.push(Fragment_default.inspectFragment(t,r,a+1));return a<r.depth?n:[]}},Map_default=DataFormat_Map;(t=>{t.Writer=class{_index=0;_bytes;Cache;constructor(t,e){this._bytes=e,this.Cache=t}get index(){return this._index}get bytes(){return this._bytes}writeByte(t){this._bytes[this._index]=t,this._index++}writeBytes(t){this._bytes.set(t,this._index),this._index+=t.length}};t.Reader=class{_index=0;_bytes;constructor(t){this._bytes=t,this._bytes.set}get index(){return this._index}get bytes(){return this._bytes}readByte(){const t=this._bytes[this._index];return this._index++,t}readBytes(t){const e=this._bytes.subarray(this._index,this._index+t);return this._index+=t,e}},t.Formats=[UintArray_default,Boolean_default,Integer_default2,String_default2,Object_default,Array_default,None_default,Set_default,Map_default],t.getDataFormatID=function(t){if(null==t)return DataFormat_default.ID.None;if("boolean"==typeof t)return DataFormat_default.ID.Boolean;if("number"==typeof t&&!Number.isNaN(t))return Number.isInteger(t)?DataFormat_default.ID.Integer:DataFormat_default.ID.Float;if("string"==typeof t)return DataFormat_default.ID.String;if(Array.isArray(t))return DataFormat_default.ID.Array;if(t instanceof Uint8Array||t instanceof Uint16Array||t instanceof Uint32Array||t instanceof BigUint64Array)return DataFormat_default.ID.UintArray;if(t instanceof Set)return DataFormat_default.ID.Set;if(t instanceof Map)return DataFormat_default.ID.Map;if(t instanceof Object)return DataFormat_default.ID.Object;throw new Error(`Unsupported Data Format: <${typeof t}> ([34m${util.inspect(t)}[0m)`)},t.getDataFormat=function(e){for(const r of t.Formats)if(r.id===e)return r;throw new Error(`Data Format Not Found: "${e}"`)}})(Data||(Data={}));var Binarion,Data_default=Data,Fragment_default=class{static getFragmentByteLength(t,e){const r=Data_default.getDataFormatID(e);return 1+Data_default.getDataFormat(r).getBodyInfo(t,e).bodyLength}static writeFragment(t,e){const r=Data_default.getDataFormatID(e),a=Data_default.getDataFormat(r),n=a.getBodyInfo(t.Cache,e);this.writeHeader(t,{dataFormatID:r,attachment:a.getHeaderAttachemnt(e)}),a.writeBody(t,e,n)}static writeHeader(t,e){Nibble_default.writeNibble(t,e.dataFormatID,e.attachment)}static readFragment(t){const[e,r]=Nibble_default.readNibble(t);return Data_default.getDataFormat(e).readBody(t,r)}static inspectFragment(t,e,r){const a=t.index,[n,g]=Nibble_default.readNibble(t),o=Data_default.getDataFormat(n),i=Data_default.getDataFormat(n).inspectChildren(t,g,e,r);return{dataFormatID:n,headerAttachment:g,name:o.inspectName(g),fragmentByteLength:t.index-a,index:a,children:i}}},Inspector_default=class{_options;_inspectResult;constructor(t,e){void 0===e&&(e={}),this._options={depth:DefaultValue_default(e.depth,1/0)},this._inspectResult=Fragment_default.inspectFragment(new Data_default.Reader(t),this._options,0)}get fragmentInfo(){return this._inspectResult}format(){return this._formatFragmentInfo(this._inspectResult,0)}_formatFragmentInfo(t,e){let r="";r+="  ".repeat(e)+`- ${t.name} [${t.fragmentByteLength} Bytes]`;for(const a of t.children)r+=`\n${this._formatFragmentInfo(a,e+1)}`;return r}};(t=>{t.save=function(t){const e=new CacheManager_default,r=new Uint8Array(Fragment_default.getFragmentByteLength(e,t)),a=new Data_default.Writer(e,r);return Fragment_default.writeFragment(a,t),r},t.load=function(t){return Fragment_default.readFragment(new Data_default.Reader(t))}})(Binarion||(Binarion={}));export{Binarion,Inspector_default as Inspector};